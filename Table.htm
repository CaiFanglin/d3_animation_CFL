<html> 
  <head> 
        <meta charset="utf-8"> 
        <title>HelloWorld</title> 
  </head> 
 <style>
.axis path,
.axis line{
  fill: none;
  stroke: black;
  shape-rendering: crispEdges;
}

.axis text {
  font-family: sans-serif;
  font-size: 11px;
}
</style>

    <body> 
   
    <script type="text/javascript" charset='utf-8' src="http://d3js.org/d3.v3.min.js"></script>
        <script>
          var width=400;
          var height=400;
          //创建svg
          var svg = d3.select('body')
                    .append('svg')
                    .attr('width',width)
                    .attr('height',height);
          var padding={left:30,right:30,top:20,bottom:20};

          var dataset=[30,40,23,59,19,36];

          var xScale=d3.scale.ordinal()
                      .domain(d3.range(dataset.length))
                      .rangeRoundBands([0,width-padding.left-padding.right]);

          var yScale=d3.scale.linear()
                     .domain([0,d3.max(dataset)])
                     .range([height-padding.top-padding.bottom,0]);

          var xAxis=d3.svg.axis()
                    .scale(xScale)
                    .orient("bottom");

          var yAxis=d3.svg.axis()
                    .scale(yScale)
                    .orient('left');

          //矩形之间的空白
var rectPadding = 4;

//添加矩形元素
var rects = svg.selectAll(".MyRect")
        .data(dataset)
        .enter()
        .append("rect")
        .attr("class","MyRect")
        .attr("transform","translate(" + padding.left + "," + padding.top + ")")
        .attr("x", function(d,i){
            return xScale(i) + rectPadding/2;
        } )
        .attr("width", xScale.rangeBand() - rectPadding )
        .attr('fill',"steelblue")
        .on('mouseover',function(d,i){
             d3.select(this)
              .attr('fill',"yellow");
        })
        .on('mouseout',function(d,i){
            d3.select(this)
              .transition()
              .duration(500)
              .attr('fill',"steelblue");
        })
        .attr("y",function(d){
         var mn = yScale.domain()[0];
            return yScale(mn);
        })
        .attr('height',function(d){
          return 0;
        })
        .transition()
        .delay(function(d,i){
          return i*200;
        })
        .duration(200)
        .ease('bounce')
        .attr('y',function(d){
          return yScale(d);
        })
       .attr("height", function(d){
            return height - padding.top - padding.bottom - yScale(d);
        }); 

//添加文字元素
      var texts = svg.selectAll(".MyText")
        .data(dataset)
        .enter()
        .append("text")
        .attr("class","MyText")
        .attr("transform","translate(" + padding.left + "," + padding.top + ")")
        .attr("x", function(d,i){
            return xScale(i) + rectPadding/2;
        })
        .attr("dx",function(){
            return (xScale.rangeBand() - rectPadding)/2;
        })
        .attr("dy",function(d){
            return 20;
        })
        .text(function(d){
            return d;
        })
        .attr('text-anchor','middle')
        .attr("y",function(d){
            var min = yScale.domain()[0];
            return yScale(min);
        })
        .transition()
        .delay(function(d,i){
          return i*200;
        })
        .duration(500)
        .ease('bounce')
        .attr('y',function(d){
          return yScale(d);
        });

          svg.append('g')
             .attr('class',"axis")
             .attr('transform',"translate("+padding.left+","+(height-padding.bottom)+")")
             .call(xAxis);

          svg.append('g')
             .attr('class','axis')
             .attr('transform',"translate(" + padding.left + "," + padding.top + ")")
             .call(yAxis);
             

        </script> 
    </body> 
</html>
